:PROPERTIES:
:ID:       2a6e3f2c-622b-4654-9a53-98a1fc2a8c80
:END:
#+title: metaphysics-of-programming

When we write programs there are different ways that we can organize our code.
Different ways of programming, especially in computational science, represent different ways of representing the structure of reality.
Questions regarding what is 'really' real and what reality consits of fall under the domain of metaphysics.
Metaphysical assumptions are embedded in computer programs, and often have parallels in historical philosophies.

Metaphysics is by its nature not demonstrable - we do not have access to reality as it really is, so we will never truly know.
Despite this, no one is truly metaphysically agnostic - we all reason about a real world and make assumptions about it in order to navigate our surroundings.
The role of metaphysics then is more about organizing thought.
It is about analyzing our mental representations of reality and how these constrain and empower us.
In my evaluation then, the strengths and limitations of different programming tools are powerful ways to explore metaphysical questions, and metaphysics can be a useful guide for understanding the strengths and limiations of programming practice.

* Object Oriented Plato

TODO: there is a disconnect at the heart of this - what is real? stateless processes that determine the transitions of state (functions, classes), or only those things that represent state?

The dominant programming methodology for the last forty years or so has been Object Oriented Programming (OOP).
In classical OOP a program - including any real-world systems it represents- consists of objects which are instances of classes.
A class represents a category of object, like a Chair class represents the category of chairs, while your living room chair is a specific instance of that class.
Any specific chair has additional, changeable properties like color, position, or velocity (during particularly heated arguments).
The class of chairs itself though does not (strictly speaking) have these properties and is defined one way, and stays that way.

Those familair with classical greek philosophy have likely already spotted a parallel.
In Plato's metaphysics the objects we interact with in the real world are instances of some eternal, perfect "form" that defines them.


* Structural typing, objects and properties

* Entity-component systems as property-cluster realism

* BDD - beyond metaphysics

